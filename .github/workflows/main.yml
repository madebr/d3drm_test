name: Build

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    defaults:
      run:
        shell: ${{ matrix.platform.shell }}

    strategy:
        fail-fast: false
        matrix:
            platform:
                - { name: 'Windows (MSVC)',     os: windows-latest, shell: sh, msvc: true }
                - { name: 'Windows (mingw32)',  os: windows-latest, shell: 'msys2 {0}', msystem: mingw32, msys-env: mingw-w64-i686 }

    steps:
      - uses: actions/checkout@v4
      - name: 'Set up MSYS2'
        if: ${{ contains(matrix.platform.shell, 'msys2') }}
        uses: msys2/setup-msys2@v2
        with:
            msystem: ${{ matrix.platform.msystem }}
            path-type: inherit
            install: >-
              ${{ matrix.platform.msys-env }}-cmake
              ${{ matrix.platform.msys-env }}-gcc
              ${{ matrix.platform.msys-env }}-ninja
      - uses: ilammy/msvc-dev-cmd@v1
        if: ${{ matrix.platform.msvc }}
        with:
          arch: Win32
      - name: 'Install Ninja'
        uses: aseprite/get-ninja@main
        if: ${{ !contains(matrix.platform.shell, 'msys2') }}
      - name: 'CMake (Configure)'
        run: |
          cmake -B build -GNinja ${{ matrix.platform.cmake }}
      - name: 'CMake (Build)'
        run: |
          cmake --build build -- -k0
